# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-26 17:29
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('utils', '0001_initial'),
        ('sme', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('owner', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllocatedVehicleLoadingUnloadingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_loading_points', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_unloading_points', models.CharField(blank=True, max_length=255, null=True)),
                ('pick_up_location', models.CharField(blank=True, max_length=255, null=True)),
                ('pick_up_city', models.CharField(blank=True, max_length=255, null=True)),
                ('drop_location', models.CharField(blank=True, max_length=255, null=True)),
                ('drop_city', models.CharField(blank=True, max_length=255, null=True)),
                ('vehicle_type', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_vehicle', models.CharField(blank=True, max_length=255, null=True)),
                ('shipment_datetime', models.DateTimeField(blank=True, null=True)),
                ('total_weight', models.CharField(blank=True, max_length=255, null=True)),
                ('material', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_rate', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_insured', models.CharField(blank=True, choices=[('no', 'NO'), ('yes', 'YES')], max_length=4, null=True)),
                ('company', models.CharField(blank=True, choices=[('Sun Birla', 'Sun Birla')], max_length=255, null=True)),
                ('policy_number', models.CharField(blank=True, max_length=30, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('amount', models.CharField(blank=True, max_length=30, null=True)),
                ('risk', models.CharField(blank=True, max_length=70, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Customer Insurance Details',
            },
        ),
        migrations.CreateModel(
            name='InWardPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(blank=True, max_length=35, null=True)),
                ('received_from', models.CharField(max_length=300, null=True)),
                ('payment_mode', models.CharField(blank=True, choices=[('cash', 'Cash'), ('cheque', 'Cheque'), ('neft', 'NEFT'), ('imps', 'IMPS'), ('rtgs', 'RTGS'), ('happay', 'Happay'), ('hdfc_internal_account', 'HDFC Internal Account')], max_length=40, null=True)),
                ('amount', models.IntegerField(default=0)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'transaction_inwardpayment',
            },
        ),
        migrations.CreateModel(
            name='LoadingUnloadingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('loading', 'loading'), ('unloading', 'unloading')], max_length=30, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('pin', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='utils.City')),
            ],
            options={
                'verbose_name_plural': 'Loading/Unloading Locations',
            },
        ),
        migrations.CreateModel(
            name='LrDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lr_number', models.CharField(max_length=30, null=True)),
                ('package', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('weight_actual', models.CharField(blank=True, max_length=70, null=True)),
                ('weight_charged', models.CharField(blank=True, max_length=70, null=True)),
                ('rate_type', models.CharField(blank=True, choices=[('kg', 'Kilogram'), ('cft', 'Cubic feet'), ('mt', 'Metric Ton')], max_length=30, null=True)),
                ('rate', models.CharField(blank=True, max_length=70, null=True)),
                ('freight_charge', models.CharField(blank=True, max_length=70, null=True)),
                ('loading_charge', models.CharField(blank=True, max_length=70, null=True)),
                ('unloading_charge', models.CharField(blank=True, max_length=70, null=True)),
                ('lr_charge', models.CharField(blank=True, max_length=20, null=True)),
                ('service_tax_charge', models.CharField(blank=True, max_length=30, null=True)),
                ('reporting_datetime', models.DateTimeField(blank=True, null=True)),
                ('unloading_datetime', models.DateTimeField(blank=True, null=True)),
                ('lr_date', models.DateField(blank=True, null=True)),
                ('from_city', models.CharField(blank=True, max_length=70, null=True)),
                ('to_city', models.CharField(blank=True, max_length=70, null=True)),
                ('lr_aaho', models.CharField(blank=True, max_length=30, null=True)),
                ('road_permit_number', models.CharField(blank=True, max_length=200, null=True)),
                ('liability_of_service_tax', models.CharField(blank=True, max_length=200, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'LR Details',
            },
        ),
        migrations.CreateModel(
            name='OutWardPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(blank=True, max_length=35, null=True)),
                ('paid_to', models.CharField(max_length=300, null=True)),
                ('payment_mode', models.CharField(blank=True, choices=[('cash', 'Cash'), ('cheque', 'Cheque'), ('neft', 'NEFT'), ('imps', 'IMPS'), ('rtgs', 'RTGS'), ('happay', 'Happay'), ('hdfc_internal_account', 'HDFC Internal Account')], max_length=20, null=True)),
                ('amount', models.CharField(blank=True, max_length=20, null=True)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'transaction_outwardpayment',
            },
        ),
        migrations.CreateModel(
            name='PartyInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_description', models.CharField(blank=True, choices=[('advance', 'advance'), ('balance', 'balance'), ('additional_charges', 'additional charges')], max_length=200, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=70, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('amount', models.CharField(blank=True, max_length=70, null=True)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=20, null=True, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=100, null=True)),
                ('total_vehicle_requested', models.CharField(blank=True, max_length=10, null=True)),
                ('material', models.TextField(blank=True, null=True)),
                ('shipment_datetime', models.DateTimeField(null=True)),
                ('booking_request_datetime', models.DateTimeField(blank=True, null=True)),
                ('booking_confirmation_datetime', models.DateTimeField(blank=True, null=True)),
                ('transaction_status', models.CharField(blank=True, choices=[('open', 'Open'), ('pending', 'Pending'), ('confirmed', 'confirmed'), ('in_transit', 'In Transit'), ('completed', 'Completed'), ('cancel', 'Cancel')], default='pending', max_length=35, null=True)),
                ('expected_rate', models.CharField(blank=True, max_length=255, null=True)),
                ('total_amount_charged_to_company', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('total_amount_paid_to_owner', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('advance_amount_from_company', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('advance_amount_paid_to_owner', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('advance_amount_to_broker_driver', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('additional_charges_for_customer', models.IntegerField(blank=True, null=True, verbose_name='Additional Charges/Deductions for Customer (+/-)')),
                ('note_for_additional_customer_charges', models.TextField(blank=True, null=True, verbose_name='Explanation Additional Charges/Deductions for Customer (+/-)')),
                ('additional_charges_for_owner', models.IntegerField(blank=True, null=True, verbose_name='Additional Charges/Deductions for Owner (+/-)')),
                ('note_for_additional_owner_charges', models.TextField(blank=True, null=True, verbose_name='Explanation Additional Charges/Deductions for Owner (+/-)')),
                ('cancellation_date', models.DateField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('booking_agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking_agent', to=settings.AUTH_USER_MODEL)),
                ('transaction_managed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='TransactionVendorRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.Transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserVendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleAllocated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(blank=True, max_length=70, null=True)),
                ('driver_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('lr_number', models.CharField(blank=True, max_length=200, null=True)),
                ('source_address', models.CharField(blank=True, max_length=255, null=True)),
                ('source_city', models.CharField(blank=True, max_length=70, null=True)),
                ('source_pin', models.CharField(blank=True, max_length=255, null=True)),
                ('destination_address', models.CharField(blank=True, max_length=255, null=True)),
                ('destination_city', models.CharField(blank=True, max_length=70, null=True)),
                ('destination_pin', models.CharField(blank=True, max_length=255, null=True)),
                ('material', models.CharField(blank=True, max_length=300, null=True)),
                ('actual_weight', models.DecimalField(blank=True, decimal_places=3, default=1, max_digits=12, null=True, verbose_name='Actual Weight (MT)')),
                ('charged_weight', models.DecimalField(blank=True, decimal_places=3, default=1, max_digits=12, null=True, verbose_name='Charged Weight(MT)')),
                ('party_rate', models.IntegerField(blank=True, default=0, null=True, verbose_name='Party Rate(M.T.)')),
                ('supplier_rate', models.IntegerField(blank=True, default=0, null=True, verbose_name='Supplier Rate(M.T.)')),
                ('total_in_ward_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('total_out_ward_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('total_amount_to_company', models.IntegerField(blank=True, default=0, null=True)),
                ('advance_amount_from_company', models.IntegerField(blank=True, default=0, null=True)),
                ('total_amount_to_owner', models.IntegerField(blank=True, default=0, null=True)),
                ('advance_amount_to_owner', models.IntegerField(blank=True, default=0, null=True)),
                ('advance_to_driver_or_broker', models.IntegerField(blank=True, default=0, null=True)),
                ('extra_length_charge', models.IntegerField(blank=True, default=0, null=True)),
                ('extra_height_charge', models.IntegerField(blank=True, default=0, null=True)),
                ('extra_weight_charge', models.IntegerField(blank=True, default=0, null=True)),
                ('loading_charge', models.IntegerField(blank=True, default=0, null=True)),
                ('unloading_charge', models.IntegerField(blank=True, default=0, null=True)),
                ('detention_charge', models.IntegerField(blank=True, default=0, null=True)),
                ('additional_charges_for_company', models.IntegerField(blank=True, default=0, null=True, verbose_name='Additional Charges/Deductions for Company (+/-)')),
                ('remarks_about_additional_charges', models.TextField(blank=True, null=True, verbose_name='Explanation Additional Charges/Deductions for Company (+/-)')),
                ('additional_charges_for_owner', models.IntegerField(blank=True, default=0, null=True, verbose_name='Additional Charges/Deductions for Owner (+/-)')),
                ('note_for_additional_owner_charges', models.TextField(blank=True, null=True, verbose_name='Explanation Additional Charges/Deductions for Owner (+/-)')),
                ('commission', models.IntegerField(blank=True, default=0, null=True)),
                ('lr_cost', models.IntegerField(blank=True, default=0, null=True)),
                ('deduction_for_advance', models.IntegerField(blank=True, default=0, null=True)),
                ('deduction_for_balance', models.IntegerField(blank=True, default=0, null=True)),
                ('other_deduction', models.IntegerField(blank=True, default=0, null=True)),
                ('remarks_about_deduction', models.TextField(blank=True, null=True)),
                ('deductions_for_company', models.IntegerField(default=0)),
                ('to_be_billed_to', models.CharField(blank=True, max_length=200, null=True)),
                ('billing_address', models.CharField(blank=True, max_length=300, null=True)),
                ('billing_contact_number', models.CharField(blank=True, max_length=50, null=True)),
                ('billing_invoice_date', models.DateField(blank=True, null=True)),
                ('invoice_remarks_for_additional_charges', models.TextField(blank=True, null=True)),
                ('invoice_remarks_for_deduction_discount', models.TextField(blank=True, null=True)),
                ('tds_deducted_amount', models.IntegerField(blank=True, null=True)),
                ('booking_request_time', models.DateTimeField(blank=True, null=True)),
                ('booking_confirmation_time', models.DateTimeField(blank=True, null=True)),
                ('pod_date', models.DateTimeField(blank=True, null=True)),
                ('pod_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('loading', 'Loading'), ('in_transit', 'In-Transit'), ('unloading', 'Unloading'), ('completed', 'Completed')], default='pending', max_length=20, null=True)),
                ('pod', models.CharField(blank=True, help_text='s3 file key', max_length=255, null=True)),
                ('pod_thumb', models.CharField(blank=True, help_text='s3 file key', max_length=255, null=True)),
                ('pod_verified', models.BooleanField(default=False)),
                ('outward_payment_status', models.CharField(blank=True, choices=[('no_payment_made', 'No Payment Made'), ('partial', 'Partial'), ('complete', 'Complete')], max_length=20, null=True)),
                ('inward_payment_status', models.CharField(blank=True, choices=[('no_invoice', 'No Invoice'), ('invoice_raised', 'Invoice Raised'), ('partial_received', 'Partial Received'), ('full_received', 'Full Received')], max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='allocated_vehicle', to='transaction.Transaction')),
                ('vehicle_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='owner.Vehicle')),
            ],
            options={
                'verbose_name_plural': 'Vehicle(s) Allocated',
            },
        ),
        migrations.CreateModel(
            name='VehicleRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(max_length=100)),
                ('vehicle_capacity', models.CharField(blank=True, max_length=30, null=True)),
                ('quantity', models.IntegerField()),
                ('details', models.CharField(blank=True, max_length=200, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_vehicles', to='transaction.Transaction')),
                ('vehicle_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_requests', to='utils.VehicleCategory')),
            ],
            options={
                'db_table': 'transaction_vehiclerequest',
                'verbose_name_plural': 'Vehicle(s) Requested',
            },
        ),
        migrations.CreateModel(
            name='VehicleRequestQuote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('amount', models.PositiveIntegerField(default=0)),
                ('aaho_amount', models.PositiveIntegerField(default=0)),
                ('comments', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_quotes', to='transaction.Transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vehicle_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_request_quotes', to='transaction.VehicleRequest')),
            ],
        ),
        migrations.CreateModel(
            name='VendorRequestResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_id', models.CharField(blank=True, max_length=30, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('keyword', models.CharField(blank=True, max_length=16, null=True)),
                ('status', models.CharField(choices=[('new', 'new'), ('accepted', 'accepted'), ('declined', 'declined')], default='new', max_length=10)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_response', to='transaction.Transaction')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transaction_vendor_response', to='transaction.UserVendor')),
            ],
        ),
        migrations.AddField(
            model_name='transactionvendorrequest',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.UserVendor'),
        ),
        migrations.AddField(
            model_name='partyinvoice',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='transaction.Transaction'),
        ),
        migrations.AddField(
            model_name='outwardpayment',
            name='allocated_vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outward_payment_allocated_vehicle', to='transaction.VehicleAllocated'),
        ),
        migrations.AddField(
            model_name='outwardpayment',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='transaction.Transaction'),
        ),
        migrations.AddField(
            model_name='lrdetails',
            name='allocated_vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lr_num', to='transaction.VehicleAllocated'),
        ),
        migrations.AddField(
            model_name='lrdetails',
            name='consignee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consignee_details', to='sme.ConsignorConsignee'),
        ),
        migrations.AddField(
            model_name='lrdetails',
            name='consignor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consignor_details', to='sme.ConsignorConsignee'),
        ),
        migrations.AddField(
            model_name='lrdetails',
            name='delivery_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='utils.AahoOffice'),
        ),
        migrations.AddField(
            model_name='lrdetails',
            name='insurance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.Insurance'),
        ),
        migrations.AddField(
            model_name='lrdetails',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lr', to='transaction.Transaction'),
        ),
        migrations.AddField(
            model_name='loadingunloadingaddress',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loading_unloading_location', to='transaction.Transaction'),
        ),
        migrations.AddField(
            model_name='inwardpayment',
            name='allocated_vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inward_payment_allocated_vehicle', to='transaction.VehicleAllocated'),
        ),
        migrations.AddField(
            model_name='inwardpayment',
            name='transaction',
            field=models.ManyToManyField(blank=True, related_name='payment', to='transaction.PartyInvoice'),
        ),
        migrations.AddField(
            model_name='allocatedvehicleloadingunloadingaddress',
            name='allocated_vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.VehicleAllocated'),
        ),
        migrations.AddField(
            model_name='allocatedvehicleloadingunloadingaddress',
            name='loading_unloading_address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.LoadingUnloadingAddress'),
        ),
        migrations.AlterUniqueTogether(
            name='vehiclerequestquote',
            unique_together=set([('vehicle_request', 'user')]),
        ),
    ]
