# Generated by Django 2.0.5 on 2018-06-16 14:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sme', '0019_auto_20180514_1143'),
        ('broker', '0009_broker_code'),
        ('team', '0095_auto_20180528_1043'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditDebitNoteReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CreditNoteCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_note_number', models.CharField(max_length=15, unique=True)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_customer_adjusted_by', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_customer_approved_by', to=settings.AUTH_USER_MODEL)),
                ('bookings', models.ManyToManyField(to='team.ManualBooking', verbose_name='Adjusted Bookings')),
                ('changed_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_customer_changed_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_customer_created_by', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sme.Sme')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='team.Invoice')),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_customer_issued_by', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.CreditDebitNoteReason', verbose_name='Reason for Credit Note')),
            ],
            options={
                'verbose_name_plural': 'Credit Note - Customer (CNC)',
            },
        ),
        migrations.CreateModel(
            name='CreditNoteCustomerDirectAdvance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_note_number', models.CharField(max_length=15, unique=True)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_customer_advance_adjusted_by', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_customer_advance_approved_by', to=settings.AUTH_USER_MODEL)),
                ('bookings', models.ManyToManyField(to='team.ManualBooking', verbose_name='Adjusted Bookings')),
                ('changed_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_customer_advance_changed_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_customer_advance_created_by', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sme.Sme')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='team.Invoice')),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_customer_advance_issued_by', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.CreditDebitNoteReason', verbose_name='Reason for Credit Note')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='broker.Broker')),
            ],
            options={
                'verbose_name_plural': 'Credit note â€“ Customer for Direct Adv (CNCA)',
            },
        ),
        migrations.CreateModel(
            name='CreditNoteSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_note_number', models.CharField(max_length=15, unique=True)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_supplier_adjusted_by', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_supplier_approved_by', to=settings.AUTH_USER_MODEL)),
                ('bookings', models.ManyToManyField(to='team.ManualBooking', verbose_name='Adjusted Bookings')),
                ('changed_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_supplier_changed_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_supplier_created_by', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='team.Invoice')),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_supplier_issued_by', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.CreditDebitNoteReason', verbose_name='Reason for Credit Note')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='broker.Broker')),
            ],
            options={
                'verbose_name_plural': 'Credit Note Supplier (CNS)',
            },
        ),
        migrations.CreateModel(
            name='DebitNoteCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debit_note_number', models.CharField(max_length=15, unique=True)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_customer_adjusted_by', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_customer_approved_by', to=settings.AUTH_USER_MODEL)),
                ('bookings', models.ManyToManyField(to='team.ManualBooking', verbose_name='Adjusted Bookings')),
                ('changed_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_customer_changed_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_customer_created_by', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sme.Sme')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='team.Invoice')),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_customer_issued_by', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.CreditDebitNoteReason', verbose_name='Reason for Credit Note')),
            ],
            options={
                'verbose_name_plural': 'Debit Note â€“ Customer (DNC)',
            },
        ),
        migrations.CreateModel(
            name='DebitNoteSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debit_note_number', models.CharField(max_length=15, unique=True)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_supplier_adjusted_by', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_supplier_approved_by', to=settings.AUTH_USER_MODEL)),
                ('bookings', models.ManyToManyField(to='team.ManualBooking', verbose_name='Adjusted Bookings')),
                ('changed_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_supplier_changed_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_supplier_created_by', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='team.Invoice')),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_supplier_issued_by', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.CreditDebitNoteReason', verbose_name='Reason for Credit Note')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='broker.Broker')),
            ],
            options={
                'verbose_name_plural': 'Debit Note â€“ Supplier (DNS)',
            },
        ),
        migrations.CreateModel(
            name='DebitNoteSupplierDirectAdvance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debit_note_number', models.CharField(max_length=15, unique=True)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_supplier_advance_adjusted_by', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_supplier_advance_approved_by', to=settings.AUTH_USER_MODEL)),
                ('bookings', models.ManyToManyField(to='team.ManualBooking', verbose_name='Adjusted Bookings')),
                ('changed_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_supplier_advance_changed_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_supplier_advance_created_by', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sme.Sme')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='team.Invoice')),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_supplier_advance_issued_by', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.CreditDebitNoteReason', verbose_name='Reason for Credit Note')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='broker.Broker')),
            ],
            options={
                'verbose_name_plural': 'Debit Note â€“ Supplier for Direct Adv (DNSA)',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCreditNoteCustomer',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('credit_note_number', models.CharField(db_index=True, max_length=15)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('adjusted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sme.Sme')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.Invoice')),
                ('issued_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.CreditDebitNoteReason')),
            ],
            options={
                'verbose_name': 'historical credit note customer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCreditNoteCustomerDirectAdvance',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('credit_note_number', models.CharField(db_index=True, max_length=15)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('adjusted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sme.Sme')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.Invoice')),
                ('issued_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.CreditDebitNoteReason')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='broker.Broker')),
            ],
            options={
                'verbose_name': 'historical credit note customer direct advance',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCreditNoteSupplier',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('credit_note_number', models.CharField(db_index=True, max_length=15)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('adjusted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.Invoice')),
                ('issued_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.CreditDebitNoteReason')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='broker.Broker')),
            ],
            options={
                'verbose_name': 'historical credit note supplier',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDebitNoteCustomer',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('debit_note_number', models.CharField(db_index=True, max_length=15)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('adjusted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sme.Sme')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.Invoice')),
                ('issued_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.CreditDebitNoteReason')),
            ],
            options={
                'verbose_name': 'historical debit note customer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDebitNoteSupplier',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('debit_note_number', models.CharField(db_index=True, max_length=15)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('adjusted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.Invoice')),
                ('issued_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.CreditDebitNoteReason')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='broker.Broker')),
            ],
            options={
                'verbose_name': 'historical debit note supplier',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDebitNoteSupplierDirectAdvance',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('debit_note_number', models.CharField(db_index=True, max_length=15)),
                ('date', models.DateField()),
                ('credit_amount', models.PositiveIntegerField(default=0)),
                ('adjusted_amount', models.PositiveIntegerField(default=0)),
                ('issued_on', models.DateTimeField()),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('adjusted_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partial', 'Partially Adjusted'), ('adjusted', 'Fully Adjusted')], max_length=20)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('adjusted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sme.Sme')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.Invoice')),
                ('issued_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='team.CreditDebitNoteReason')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='broker.Broker')),
            ],
            options={
                'verbose_name': 'historical debit note supplier direct advance',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
    ]
